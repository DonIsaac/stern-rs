[package]
name        = "stern"
version     = "0.1.0"
description = "Ultra small string interning"
repository  = "https://github.com/DonIsaac/stern-rs.git"
keywords    = ["compact string", "small string", "string interning", "string"]
categories  = ["compilers", "data-structures"]
readme      = "README.md"
authors     = ["Don Isaac"]
edition     = "2021"
license     = "MIT"

# See more keys and their definitions at
# https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
default       = []
nohash-hasher = ["dep:nohash-hasher"]
serde         = ["dep:serde"]
atom_size_128 = []
atom_size_64  = []
atom_size_32  = []

[dependencies]
assert-unchecked  = { version = "0.1.2" }
hashbrown         = { version = "0.14.5" }
rustc-hash        = { version = "2.0.0" }
static_assertions = { version = "1.1.0" }

nohash-hasher = { version = "0.2.0", optional = true }
serde         = { version = ">=1", optional = true }

[lints.clippy]
all      = { level = "warn", priority = -1 }
pedantic = { level = "warn", priority = -1 }
cargo    = { level = "warn", priority = -1 }

# Lots of false positives, and there's many small functions we want to inline.
inline_always = "allow"
# Noisy, doesn't always provide a lot of value.
must_use_candidate = "allow"
# ptr::cast() fails when converting between pointers of sized types to unsized
# types (and vice versa). Only `*const as _ as *const T ` works (which is odd,
# because that's exactly waht pointer::cast() does, but rustc does what rustc
# does).
ptr_as_ptr                    = "allow"
ref_as_ptr                    = "allow"
module_name_repetitions       = "allow"
missing_transmute_annotations = "allow"
